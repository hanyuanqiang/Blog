 ### 设置###
log4j.rootLogger = debug,stdout,D,E

### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.Threshold = INFO
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n


### 输出INFO 级别以上的日志 ###
##每天产生一个日志文件##
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
##指定log的输出目的地
log4j.appender.D.File = ../blog-logs/info/info.log
log4j.appender.D.Append = true
##输出日志级别为INFO
log4j.appender.D.Threshold = INFO
##可以灵活地指定布局模式
log4j.appender.D.layout = org.apache.log4j.PatternLayout
##来格式化信息
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} - [ %p ] %l%n%m%n
##编码
log4j.appender.D.Encoding=UTF-8


### 输出ERROR 级别以上的日志到=E://logs/error.log ###
##每天产生一个日志文件
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
##指定log的输出目的地
log4j.appender.E.File =../blog-logs/error/error.log
log4j.appender.E.Append = true
##输出日志级别为ERROR
log4j.appender.E.Threshold = ERROR
##可以灵活地指定布局模式
log4j.appender.E.layout = org.apache.log4j.PatternLayout
##来格式化信息
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} - [ %p ] %l%n%m%n
##编码
log4j.appender.E.Encoding=UTF-8